formatter: '' # this is required

version: ''

header-from: main.tf
footer-from: ''

recursive:
  enabled: false
  path: modules

sections:
  hide: []
  show: []

content: |-
  # Elestio OpenSearch Cluster Terraform module

  ## Benefits of an OpenSearch cluster

  An OpenSearch cluster is a great option to ensure high availability, it allows for easy scalability to meet changing demands without replacing the entire system.  
  It can handle more requests without slowing down or crashing, and provides fault tolerance to ensure that the system remains operational.
  {{ .Header }}
  ## Module requirements

  - 1 Elestio account https://dash.elest.io/signup
  - 1 API key https://dash.elest.io/account/security
  - 1 SSH public/private key (see how to create one [here](https://registry.terraform.io/providers/elestio/elestio/latest/docs/guides/ssh_keys))

  ## Module usage

  This is a minimal example of how to use the module:

  ```hcl
  {{ include "examples/doc/usage.tf" }}
  ```

  Keep your mysql password safe, you will need it to access the admin panel.

  If you want to know more about node configuration, check the mysql service documentation [here](https://registry.terraform.io/providers/elestio/elestio/latest/docs/resources/mysql).

  If you want to choose your own provider, datacenter or server type, check the guide [here](https://registry.terraform.io/providers/elestio/elestio/latest/docs/guides/providers_datacenters_server_types).

  If you want to generated a valid SSH Key, check the guide [here](https://registry.terraform.io/providers/elestio/elestio/latest/docs/guides/ssh_keys).

  If you add more nodes, you may attains the resources limit of your account, please visit your account [quota page](https://dash.elest.io/account/add-quota).

  ## Quick configuration

  The following example will create an OpenSearch cluster with 2 nodes.

  You may need to adjust the configuration to fit your needs.

  Create a `main.tf` file at the root of your project, and fill it with your Elestio credentials:

  ```hcl
  {{ include "examples/doc/init.tf" }}
  ```

  Now you can use the module to create opensearch nodes:

  ```hcl
  {{ include "examples/doc/module.tf" }}
  ```

  To get a valid random opensearch password, you can use the url https://api.elest.io/api/auth/passwordgenerator

  ```bash
  $ curl -s https://api.elest.io/api/auth/passwordgenerator
  {"status":"OK","password":"7Tz1lCfD-Y8di-AyU2o467"}
  ```

  Finally, let's add some outputs to retrieve useful information:

  ```hcl
  {{ include "examples/doc/outputs.tf" }}
  ```

  You can now run `terraform init` and `terraform apply` to create your MySQL cluster.
  After a few minutes, the cluster will be ready to use.
  You can access your outputs with `terraform output`:

  ```bash
  $ terraform output nodes_admins
  $ terraform output nodes_database_admins
  ```

  If you want to update some parameters, you can edit the `main.tf` file and run `terraform apply` again.
  Terraform will automatically update the cluster to match the new configuration.
  Please note that changing some parameters requires to change the .env of existing nodes. This is done automatically by the module.

  ## Ready-to-deploy example

  We created a ready-to-deploy example which creates the same infrastructure as the previous example.
  You can find it [here](https://github.com/elestio-examples/terraform-elestio-opensearch-cluster/tree/main/examples/get_started).
  Follow the instructions to deploy the example.

  ## How to use the cluster

  Use `terraform output nodes_database_admins` command to output database secrets:

  ```bash
  {{ include "examples/doc/readme_output.sh" }}
  ```

  Here is an example of how to use the Opensearch cluster and all its nodes in the [Javascript client](https://opensearch.org/docs/latest/clients/javascript/index/).

  ```js
  {{ include "examples/doc/readme_how_to_use.js" }}
  ```
  {{ .Footer }}
  {{ .Inputs }}
  {{ .Modules }}
  {{ .Outputs }}
  {{ .Providers }}
  {{ .Requirements }}
  {{ .Resources }}

output:
  file: ''
  mode: inject
  template: |-
    <!-- BEGIN_TF_DOCS -->
    {{ .Content }}
    <!-- END_TF_DOCS -->

output-values:
  enabled: false
  from: ''

sort:
  enabled: true
  by: name

settings:
  anchor: true
  color: true
  default: true
  description: false
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
